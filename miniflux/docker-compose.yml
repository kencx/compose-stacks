---
version: '3.6'
services:

  db:
    container_name: miniflux_db
    image: postgres:14
    user: "${CUID:-1000}:${CGID:-1000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 120s
      start_period: 30s
    env_file: "${MINIFLUX_DB_ENV_FILE:-./miniflux.env}"
    volumes:
      - "${MINIFLUX_DB_DIR:-./miniflux_db}:/var/lib/postgresql/data"
    networks:
      - miniflux

  miniflux:
    container_name: "miniflux"
    image: miniflux/miniflux:${MINIFLUX_IMG_VER:-2.0.36}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/bin/miniflux", "-healthcheck", "auto"]
      interval: 120s
      start_period: 60s
    depends_on:
      - db
    env_file:
      - "${MINIFLUX_ENV_FILE:-./miniflux.env}"
    environment:
      - PORT=8120
      - DEBUG=1
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
    networks:
      - miniflux
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.miniflux-proxy.entrypoints=https"
      - "traefik.http.routers.miniflux-proxy.rule=Host(`miniflux.${DOMAIN_NAME}`)"
      - "traefik.http.routers.miniflux-proxy.tls=true"
      - "traefik.http.routers.miniflux-proxy.service=miniflux-service"
      - "traefik.http.services.miniflux-service.loadbalancer.server.port=${MINIFLUX_PORT:-8120}"

networks:
  miniflux:
    name: miniflux
  proxy:
    external: true
